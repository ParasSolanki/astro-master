---
import { eq } from "drizzle-orm";
import CollectionLayout from "../../../layouts/collections.astro";
import { db, schema } from "../../../server/db";
import { Image } from "astro:assets";

const { category: categorySlug, subcategory: subcategorySlug } = Astro.params;

if (!categorySlug || !subcategorySlug) {
  return Astro.redirect("/404");
}

const subcategory = await db.query.subcategoriesTable.findFirst({
  where: eq(schema.subcategoriesTable.slug, subcategorySlug),
  columns: {
    name: true,
    slug: true,
    imageUrl: true,
  },
  with: {
    products: {
      columns: {
        name: true,
        slug: true,
        imageUrl: true,
        description: true,
      },
    },
  },
});

const title = subcategory?.name
  ? `${subcategory.name} | AstroMaster`
  : "AstroMaster";
const description = subcategory?.name
  ? `Products of ${subcategory.name} subcategory`
  : "AstroMaster";
---

<CollectionLayout
  title={title}
  description={description}
  imageUrl={subcategory?.imageUrl}
>
  {!subcategory && <div>Subcategory not found</div>}
  {
    subcategory && (
      <div class="container mx-auto p-4">
        {subcategory.products.length > 0 ? (
          <h1 class="mb-2 border-b-2 text-sm font-bold">
            {subcategory.products.length}{" "}
            {subcategory.products.length === 1 ? "Product" : "Products"}
          </h1>
        ) : (
          <p>No products for this subcategory</p>
        )}
        <div class="flex flex-row flex-wrap gap-2">
          {subcategory.products.map((p) => (
            <a
              data-astro-prefetch
              class="group flex h-[130px] w-full flex-row border px-4 py-2 hover:bg-gray-100 sm:w-[250px]"
              href={`/products/${categorySlug}/${subcategorySlug}/${p.slug}`}
            >
              <div class="py-2">
                <Image
                  src={p.imageUrl ?? "/placeholder.svg?height=48&width=48"}
                  alt={`A small picture of ${p.name}`}
                  width={48}
                  height={48}
                  quality={65}
                  class="h-auto w-12 flex-shrink-0 object-cover"
                />
              </div>
              <div class="px-2" />
              <div class="h-26 flex flex-grow flex-col items-start py-2">
                <div class="text-sm font-medium text-gray-700 group-hover:underline">
                  {p.name}
                </div>
                <p class="overflow-hidden text-xs">{p.description}</p>
              </div>
            </a>
          ))}
        </div>
      </div>
    )
  }
</CollectionLayout>
